package org.example;

import net.thauvin.erik.crypto.CryptoPrice;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Update;

public class MyBot extends TelegramLongPollingBot {
    public MyBot() {
        super("6511563453:AAHDLLM6hSnFx6LTQotgsQCr7xMWVhGZcsU");
    }

    @Override
    public void onUpdateReceived(Update update) {
        var chatId = update.getMessage().getChatId();
        var text = update.getMessage().getText();

        try {
            if (text.equals("/start")) {
                sendMessage(chatId,"Hello!");
            } else if (text.equals("btc")) {
                sendPicture(chatId, "bitcoin-btc-logo.png");
                sendPrice(chatId,"BTC");

            } else if (text.equals("eth")) {
                sendPicture(chatId, "ethereum-eth-logo.png");
                sendPrice(chatId,"ETH");
            }
            else if (text.equals("ltc")) {
                sendPicture(chatId, "litecoin-ltc-logo.png");
                sendPrice(chatId,"LTC");
            }
            else if (text.equals("/all")) {
                sendPicture(chatId, "bitcoin-btc-logo.png");
                sendPrice(chatId,"BTC");
                sendPicture(chatId, "litecoin-ltc-logo.png");
                sendPrice(chatId,"LTC");
                sendPicture(chatId, "ethereum-eth-logo.png");
                sendPrice(chatId,"ETH");
            }
            else  if (text.equals("$100btc")) {
                // I tried different ways :)
              // execute(hello());
              // execute().devide();
               // sendApiMethod(hello);
               // System.out.println(hello());
                


            }

               else {
                sendMessage(chatId,"Unknown command!");
            }
        } catch (Exception e) {
            System.out.println("Error!");
        }
    }
    void sendPicture(long chatId, String name) throws Exception {
        var photo = getClass().getClassLoader().getResourceAsStream(name);
        var message = new SendPhoto();
        message.setChatId(chatId);
        message.setPhoto(new InputFile(photo, name));
        execute(message);
    }
    void sendPrice(long chatId, String name)throws Exception {
        var price = CryptoPrice.spotPrice(name);
        sendMessage(chatId,name+ "price:" + price.getAmount().doubleValue());
    }
    void sendMessage(long chatId, String text) throws Exception {
        var message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        execute(message);

    }

    
    //editions
    void main(String[] args) throws Exception {
        var x = 100;
        var y = CryptoPrice.spotPrice("BTC");
        var s = " For $100 you may get BTC" ;
        devide(x,y);
        hello(String s);
    }
    static void devide (long a, long b) {

        System.out.println(a/b);
    }
    static void hello(String s) {

        System.out.println(s);
    }
    //the end of editions



    @Override
    public String getBotUsername() {
        return "TaskBot11111111_bot";
    }
}
